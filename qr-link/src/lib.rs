//! Data link between Worldcoin App and Orb through QR-codes.
//!
//! Worldcoin App needs to transfer considerable amount of data to an Orb to
//! begin a new signup. Encoding all the data into a single or a series or QR-
//! codes would compromise QR scanning performance. On the other hand just
//! leting the Orb to download all the data from the backend would compromise
//! security.
//!
//! Therefore we employ a hybrid approach, where we transfer the data via the
//! backend for performance, and transfer a hash of the data via a QR-code for
//! security.
//!
//! //! The library is shared between Worldcoin App and Orb Core.
//! # Usage
//! ## Encode (App)
//!
//! Worldcoin App generates a QR-code using the orb relay ID and includes a hash of the app authenticated data that will be sent in the orb relay message.
//!
//! ```rust
//! use orb_qr_link::{encode_static_qr, AppAuthenticatedDataExt};
//! use orb_relay_messages::common::v1::AppAuthenticatedData;
//! use uuid::Uuid;
//!
//! // Generate a new session id and user data.
//! let orb_relay_id = Uuid::new_v4();
//! let app_data = AppAuthenticatedData {
//!    identity_commitment: identity_commitment.to_string(),
//!    self_custody_public_key: self_custody_public_key.to_string(),
//!    pcp_version: 3,
//!    os: "Android".to_string(),
//!    os_version: "1.2.3".to_string(),
//! };
//!
//! // Calculate a variable-length hash of `app_data`.
//! let app_data_hash = app_data.hash(16);
//! // Encode a new QR-code.
//! let qr = encode_static_qr(&orb_relay_id, app_data_hash);
//!
//! // Allow the Orb to scan the generated QR-code.
//! // ...
//! ```
//!
//! ## Decode (Orb)
//!
//! The Orb scans a QR-code
//!
//! ```rust
//! use orb_qr_link::{decode_qr_with_version};
//!
//! // Scan QR-code generated by the App.
//! let qr = "3WVd+tbAtSgyH0Ce9uiKT9i063t/xG2HxTIhuNa+gNnM";
//!
//! // Decode the QR-code string.
//! let (version, orb_relay_id, app_data_hash) = decode_qr_with_version(qr).unwrap();
//!
//! // connects to the app via orb relay using the orb_relay_id
//! // if version is V4 then orb can do the logic for static sessions
//!
//! // Retrieves the app data from the AnnounceAppId Orb Relay Message
//! let app_data = orb_relay_announce_id_message.app_authenticated_data;
//!
//! // Verify that the `app_data_hash` from the QR-code matches `app_data`
//! // from the backend.
//! let success = app_data.verify(app_data_hash);
//! ```

#![forbid(unsafe_code)]
#![warn(missing_docs)]

mod app_authenticated_data;
#[cfg(feature = "decode")]
mod decode;
#[cfg(feature = "encode")]
mod encode;
mod user_data;

pub use app_authenticated_data::AppAuthenticatedDataExt;
#[cfg(feature = "decode")]
pub use decode::{decode_qr_with_version, DecodeError};
#[cfg(feature = "encode")]
pub use encode::{encode_qr, encode_static_qr};
pub use user_data::{DataPolicy, UserData};
